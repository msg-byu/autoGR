<?xml version="1.0" encoding="UTF-8"?>
<fortpy mode="docstring">
  <decorates name="sp_hnfs.sc_3">
    <group name="sp_hnfs" purpose="testing" staging="../../unittests/">
      <test identifier="original" description="Tests of symmetry preserving HNF generation"
	    cases="sc[1-3]" timed="true">
	<output folder="./tests/spHNFs"
		file="spHNFs.out.{}" template="integer.xml"
		identifier="spHNFs.out"/>
	<target name="spHNFs" compareto="spHNFs.out"
		varfile="spHNFs.out" when="each"/>
      </test>
      <assignment name="n" value="nfile">
	<value identifier="nfile" file="n.in.{}"
	       folder="./tests/spHNFs" rename="n.in"/>
      </assignment>
    </group>
  </decorates>
  
  <decorates name="sp_hnfs.fcc_1">
    <group name="sp_hnfs" purpose="testing" staging="../../unittests/">
      <test identifier="original" description="Tests of symmetry preserving HNF generation"
	    cases="fcc[1-3]" timed="true">
	<output folder="./tests/spHNFs"
		file="spHNFs.out.{}" template="integer.xml"
		identifier="spHNFs.out"/>
	<target name="spHNFs" compareto="spHNFs.out"
		varfile="spHNFs.out" when="each"/>
      </test>
      <assignment name="n" value="nfile">
	<value identifier="nfile" file="n.in.{}"
	       folder="./tests/spHNFs" rename="n.in"/>
      </assignment>
    </group>
  </decorates>

  <decorates name="sp_hnfs.bcc_5">
    <group name="sp_hnfs" purpose="testing" staging="../../unittests/">
      <test identifier="original" description="Tests of symmetry preserving HNF generation"
	    cases="bcc[1-3]" timed="true">
	<output folder="./tests/spHNFs"
		file="spHNFs.out.{}" template="integer.xml"
		identifier="spHNFs.out"/>
	<target name="spHNFs" compareto="spHNFs.out"
		varfile="spHNFs.out" when="each"/>
      </test>
      <assignment name="n" value="nfile">
	<value identifier="nfile" file="n.in.{}"
	       folder="./tests/spHNFs" rename="n.in"/>
      </assignment>
    </group>
  </decorates>  

  <decorates name="sp_hnfs.hex_12">
    <group name="sp_hnfs" purpose="testing" staging="../../unittests/">
      <test identifier="original" description="Tests of symmetry preserving HNF generation"
	    cases="hex_12_[1-5]" timed="true">
	<output folder="./tests/spHNFs"
		file="spHNFs.out.{}" template="integer.xml"
		identifier="spHNFs.out"/>
	<target name="spHNFs" compareto="spHNFs.out"
		varfile="spHNFs.out" when="each"/>
      </test>
      <assignment name="n" value="nfile">
	<value identifier="nfile" file="n.in.{}"
	       folder="./tests/spHNFs" rename="n.in"/>
      </assignment>
    </group>
  </decorates>  

  <decorates name="sp_hnfs.hex_22">
    <group name="sp_hnfs" purpose="testing" staging="../../unittests/">
      <test identifier="original" description="Tests of symmetry preserving HNF generation"
	    cases="hex_22_[1-5]" timed="true">
	<output folder="./tests/spHNFs"
		file="spHNFs.out.{}" template="integer.xml"
		identifier="spHNFs.out"/>
	<target name="spHNFs" compareto="spHNFs.out"
		varfile="spHNFs.out" when="each"/>
      </test>
      <assignment name="n" value="nfile">
	<value identifier="nfile" file="n.in.{}"
	       folder="./tests/spHNFs" rename="n.in"/>
      </assignment>
    </group>
  </decorates>  

  <decorates name="sp_hnfs.rhom_9">
    <group name="sp_hnfs" purpose="testing" staging="../../unittests/">
      <test identifier="original" description="Tests of symmetry preserving HNF generation"
	    cases="rhom_9_[1-5]" timed="true">
	<output folder="./tests/spHNFs"
		file="spHNFs.out.{}" template="integer.xml"
		identifier="spHNFs.out"/>
	<target name="spHNFs" compareto="spHNFs.out"
		varfile="spHNFs.out" when="each"/>
      </test>
      <assignment name="n" value="nfile">
	<value identifier="nfile" file="n.in.{}"
	       folder="./tests/spHNFs" rename="n.in"/>
      </assignment>
    </group>
  </decorates>  

  <decorates name="sp_hnfs.rhom_4_2">
    <group name="sp_hnfs" purpose="testing" staging="../../unittests/">
      <test identifier="original" description="Tests of symmetry preserving HNF generation"
	    cases="rhom_4_2_[1-5]" timed="true">
	<output folder="./tests/spHNFs"
		file="spHNFs.out.{}" template="integer.xml"
		identifier="spHNFs.out"/>
	<target name="spHNFs" compareto="spHNFs.out"
		varfile="spHNFs.out" when="each"/>
      </test>
      <assignment name="n" value="nfile">
	<value identifier="nfile" file="n.in.{}"
	       folder="./tests/spHNFs" rename="n.in"/>
      </assignment>
    </group>
  </decorates>  

  <decorates name="sp_hnfs.rhom_24">
    <group name="sp_hnfs" purpose="testing" staging="../../unittests/">
      <test identifier="original" description="Tests of symmetry preserving HNF generation"
	    cases="rhom_24_[1-5]" timed="true">
	<output folder="./tests/spHNFs"
		file="spHNFs.out.{}" template="integer.xml"
		identifier="spHNFs.out"/>
	<target name="spHNFs" compareto="spHNFs.out"
		varfile="spHNFs.out" when="each"/>
      </test>
      <assignment name="n" value="nfile">
	<value identifier="nfile" file="n.in.{}"
	       folder="./tests/spHNFs" rename="n.in"/>
      </assignment>
    </group>
  </decorates>  

  <decorates name="sp_hnfs.st_11">
    <group name="sp_hnfs" purpose="testing" staging="../../unittests/">
      <test identifier="original" description="Tests of symmetry preserving HNF generation"
	    cases="st_11_[1-5]" timed="true">
	<output folder="./tests/spHNFs"
		file="spHNFs.out.{}" template="integer.xml"
		identifier="spHNFs.out"/>
	<target name="spHNFs" compareto="spHNFs.out"
		varfile="spHNFs.out" when="each"/>
      </test>
      <assignment name="n" value="nfile">
	<value identifier="nfile" file="n.in.{}"
	       folder="./tests/spHNFs" rename="n.in"/>
      </assignment>
    </group>
  </decorates>  

  <decorates name="sp_hnfs.st_21">
    <group name="sp_hnfs" purpose="testing" staging="../../unittests/">
      <test identifier="original" description="Tests of symmetry preserving HNF generation"
	    cases="st_21_[1-5]" timed="true">
	<output folder="./tests/spHNFs"
		file="spHNFs.out.{}" template="integer.xml"
		identifier="spHNFs.out"/>
	<target name="spHNFs" compareto="spHNFs.out"
		varfile="spHNFs.out" when="each"/>
      </test>
      <assignment name="n" value="nfile">
	<value identifier="nfile" file="n.in.{}"
	       folder="./tests/spHNFs" rename="n.in"/>
      </assignment>
    </group>
  </decorates>  

  <decorates name="sp_hnfs.smallest_prime">
    <group name="math" purpose="testing" staging="../../unittests/">
      <test identifier="original" description="Tests of symmetry preserving HNF generation"
	    cases="[1-5]" timed="true">
	<output folder="./tests/spHNFs"
		file="sp.out.{}" template="integer.xml"
		identifier="sp.out"/>
	<target name="sp" compareto="sp.out"
		varfile="sp.out" when="each"/>
      </test>
      <assignment name="a" value="afile">
	<value identifier="afile" file="a.in.{}"
	       folder="./tests/spHNFs" rename="a.in"/>
      </assignment>
    </group>
  </decorates>  

  <decorates name="sp_hnfs.bct_15">
    <group name="sp_hnfs" purpose="testing" staging="../../unittests/">
      <test identifier="original" description="Tests of symmetry preserving HNF generation"
	    cases="bt_15_[1-7]" timed="true">
	<output folder="./tests/spHNFs"
		file="spHNFs.out.{}" template="integer.xml"
		identifier="spHNFs.out"/>
	<target name="spHNFs" compareto="spHNFs.out"
		varfile="spHNFs.out" when="each"/>
      </test>
      <assignment name="n" value="nfile">
	<value identifier="nfile" file="n.in.{}"
	       folder="./tests/spHNFs" rename="n.in"/>
      </assignment>
    </group>
  </decorates>  

  <decorates name="sp_hnfs.bct_7">
    <group name="sp_hnfs" purpose="testing" staging="../../unittests/">
      <test identifier="original" description="Tests of symmetry preserving HNF generation"
	    cases="bt_7_[1-5]" timed="true">
	<output folder="./tests/spHNFs"
		file="spHNFs.out.{}" template="integer.xml"
		identifier="spHNFs.out"/>
	<target name="spHNFs" compareto="spHNFs.out"
		varfile="spHNFs.out" when="each"/>
      </test>
      <assignment name="n" value="nfile">
	<value identifier="nfile" file="n.in.{}"
	       folder="./tests/spHNFs" rename="n.in"/>
      </assignment>
    </group>
  </decorates>  

  <decorates name="sp_hnfs.bct_6">
    <group name="sp_hnfs" purpose="testing" staging="../../unittests/">
      <test identifier="original" description="Tests of symmetry preserving HNF generation"
	    cases="bt_6_[1-5]" timed="true">
	<output folder="./tests/spHNFs"
		file="spHNFs.out.{}" template="integer.xml"
		identifier="spHNFs.out"/>
	<target name="spHNFs" compareto="spHNFs.out"
		varfile="spHNFs.out" when="each"/>
      </test>
      <assignment name="n" value="nfile">
	<value identifier="nfile" file="n.in.{}"
	       folder="./tests/spHNFs" rename="n.in"/>
      </assignment>
    </group>
  </decorates>  

  <decorates name="sp_hnfs.bct_18">
    <group name="sp_hnfs" purpose="testing" staging="../../unittests/">
      <test identifier="original" description="Tests of symmetry preserving HNF generation"
	    cases="bt_18_[1-5]" timed="true">
	<output folder="./tests/spHNFs"
		file="spHNFs.out.{}" template="integer.xml"
		identifier="spHNFs.out"/>
	<target name="spHNFs" compareto="spHNFs.out"
		varfile="spHNFs.out" when="each"/>
      </test>
      <assignment name="n" value="nfile">
	<value identifier="nfile" file="n.in.{}"
	       folder="./tests/spHNFs" rename="n.in"/>
      </assignment>
    </group>
  </decorates>  

  <decorates name="sp_hnfs.so_32">
    <group name="sp_hnfs" purpose="testing" staging="../../unittests/">
      <test identifier="original" description="Tests of symmetry preserving HNF generation"
	    cases="so_32_[1-5]" timed="true">
	<output folder="./tests/spHNFs"
		file="spHNFs.out.{}" template="integer.xml"
		identifier="spHNFs.out"/>
	<target name="spHNFs" compareto="spHNFs.out"
		varfile="spHNFs.out" when="each"/>
      </test>
      <assignment name="n" value="nfile">
	<value identifier="nfile" file="n.in.{}"
	       folder="./tests/spHNFs" rename="n.in"/>
      </assignment>
    </group>
  </decorates>  

  <decorates name="sp_hnfs.fco_26">
    <group name="sp_hnfs" purpose="testing" staging="../../unittests/">
      <test identifier="original" description="Tests of symmetry preserving HNF generation"
	    cases="fco_26_[1-6]" timed="true">
	<output folder="./tests/spHNFs"
		file="spHNFs.out.{}" template="integer.xml"
		identifier="spHNFs.out"/>
	<target name="spHNFs" compareto="spHNFs.out"
		varfile="spHNFs.out" when="each"/>
      </test>
      <assignment name="n" value="nfile">
	<value identifier="nfile" file="n.in.{}"
	       folder="./tests/spHNFs" rename="n.in"/>
      </assignment>
    </group>
  </decorates>  

  <decorates name="sp_hnfs.fco_16">
    <group name="sp_hnfs" purpose="testing" staging="../../unittests/">
      <test identifier="original" description="Tests of symmetry preserving HNF generation"
	    cases="fco_16_[1-6]" timed="true">
	<output folder="./tests/spHNFs"
		file="spHNFs.out.{}" template="integer.xml"
		identifier="spHNFs.out"/>
	<target name="spHNFs" compareto="spHNFs.out"
		varfile="spHNFs.out" when="each"/>
      </test>
      <assignment name="n" value="nfile">
	<value identifier="nfile" file="n.in.{}"
	       folder="./tests/spHNFs" rename="n.in"/>
      </assignment>
    </group>
  </decorates>  

  <decorates name="sp_hnfs.bco_19">
    <group name="sp_hnfs" purpose="testing" staging="../../unittests/">
      <test identifier="original" description="Tests of symmetry preserving HNF generation"
	    cases="bco_19_[1-5]" timed="true">
	<output folder="./tests/spHNFs"
		file="spHNFs.out.{}" template="integer.xml"
		identifier="spHNFs.out"/>
	<target name="spHNFs" compareto="spHNFs.out"
		varfile="spHNFs.out" when="each"/>
      </test>
      <assignment name="n" value="nfile">
	<value identifier="nfile" file="n.in.{}"
	       folder="./tests/spHNFs" rename="n.in"/>
      </assignment>
    </group>
  </decorates>  

  <decorates name="sp_hnfs.bco_8">
    <group name="sp_hnfs" purpose="testing" staging="../../unittests/">
      <test identifier="original" description="Tests of symmetry preserving HNF generation"
	    cases="bco_8_[1-5]" timed="true">
	<output folder="./tests/spHNFs"
		file="spHNFs.out.{}" template="integer.xml"
		identifier="spHNFs.out"/>
	<target name="spHNFs" compareto="spHNFs.out"
		varfile="spHNFs.out" when="each"/>
      </test>
      <assignment name="n" value="nfile">
	<value identifier="nfile" file="n.in.{}"
	       folder="./tests/spHNFs" rename="n.in"/>
      </assignment>
    </group>
  </decorates>  

  <decorates name="sp_hnfs.bco_42">
    <group name="sp_hnfs" purpose="testing" staging="../../unittests/">
      <test identifier="original" description="Tests of symmetry preserving HNF generation"
	    cases="bco_42_[1-5]" timed="true">
	<output folder="./tests/spHNFs"
		file="spHNFs.out.{}" template="integer.xml"
		identifier="spHNFs.out"/>
	<target name="spHNFs" compareto="spHNFs.out"
		varfile="spHNFs.out" when="each"/>
      </test>
      <assignment name="n" value="nfile">
	<value identifier="nfile" file="n.in.{}"
	       folder="./tests/spHNFs" rename="n.in"/>
      </assignment>
    </group>
  </decorates>  

  <decorates name="sp_hnfs.baseco_38_13">
    <group name="sp_hnfs" purpose="testing" staging="../../unittests/">
      <test identifier="original" description="Tests of symmetry preserving HNF generation"
	    cases="baseco_38_13_[1-5]" timed="true">
	<output folder="./tests/spHNFs"
		file="spHNFs.out.{}" template="integer.xml"
		identifier="spHNFs.out"/>
	<target name="spHNFs" compareto="spHNFs.out"
		varfile="spHNFs.out" when="each"/>
      </test>
      <assignment name="n" value="nfile">
	<value identifier="nfile" file="n.in.{}"
	       folder="./tests/spHNFs" rename="n.in"/>
      </assignment>
    </group>
  </decorates>  

  <decorates name="sp_hnfs.baseco_23">
    <group name="sp_hnfs" purpose="testing" staging="../../unittests/">
      <test identifier="original" description="Tests of symmetry preserving HNF generation"
	    cases="baseco_23_[1-5]" timed="true">
	<output folder="./tests/spHNFs"
		file="spHNFs.out.{}" template="integer.xml"
		identifier="spHNFs.out"/>
	<target name="spHNFs" compareto="spHNFs.out"
		varfile="spHNFs.out" when="each"/>
      </test>
      <assignment name="n" value="nfile">
	<value identifier="nfile" file="n.in.{}"
	       folder="./tests/spHNFs" rename="n.in"/>
      </assignment>
    </group>
  </decorates>  

  <decorates name="sp_hnfs.baseco_40">
    <group name="sp_hnfs" purpose="testing" staging="../../unittests/">
      <test identifier="original" description="Tests of symmetry preserving HNF generation"
	    cases="baseco_40_[1-5]" timed="true">
	<output folder="./tests/spHNFs"
		file="spHNFs.out.{}" template="integer.xml"
		identifier="spHNFs.out"/>
	<target name="spHNFs" compareto="spHNFs.out"
		varfile="spHNFs.out" when="each"/>
      </test>
      <assignment name="n" value="nfile">
	<value identifier="nfile" file="n.in.{}"
	       folder="./tests/spHNFs" rename="n.in"/>
      </assignment>
    </group>
  </decorates>  

  <decorates name="sp_hnfs.baseco_36">
    <group name="sp_hnfs" purpose="testing" staging="../../unittests/">
      <test identifier="original" description="Tests of symmetry preserving HNF generation"
	    cases="baseco_36_[1-5]" timed="true">
	<output folder="./tests/spHNFs"
		file="spHNFs.out.{}" template="integer.xml"
		identifier="spHNFs.out"/>
	<target name="spHNFs" compareto="spHNFs.out"
		varfile="spHNFs.out" when="each"/>
      </test>
      <assignment name="n" value="nfile">
	<value identifier="nfile" file="n.in.{}"
	       folder="./tests/spHNFs" rename="n.in"/>
      </assignment>
    </group>
  </decorates>  

  <decorates name="sp_hnfs.sm_33">
    <group name="sp_hnfs" purpose="testing" staging="../../unittests/">
      <test identifier="original" description="Tests of symmetry preserving HNF generation"
	    cases="sm_33_[1-6]" timed="true">
	<output folder="./tests/spHNFs"
		file="spHNFs.out.{}" template="integer.xml"
		identifier="spHNFs.out"/>
	<target name="spHNFs" compareto="spHNFs.out"
		varfile="spHNFs.out" when="each"/>
      </test>
      <assignment name="n" value="nfile">
	<value identifier="nfile" file="n.in.{}"
	       folder="./tests/spHNFs" rename="n.in"/>
      </assignment>
    </group>
  </decorates>  

  <decorates name="sp_hnfs.sm_35">
    <group name="sp_hnfs" purpose="testing" staging="../../unittests/">
      <test identifier="original" description="Tests of symmetry preserving HNF generation"
	    cases="sm_35_[1-6]" timed="true">
	<output folder="./tests/spHNFs"
		file="spHNFs.out.{}" template="integer.xml"
		identifier="spHNFs.out"/>
	<target name="spHNFs" compareto="spHNFs.out"
		varfile="spHNFs.out" when="each"/>
      </test>
      <assignment name="n" value="nfile">
	<value identifier="nfile" file="n.in.{}"
	       folder="./tests/spHNFs" rename="n.in"/>
      </assignment>
    </group>
  </decorates>  

  <decorates name="sp_hnfs.sm_34">
    <group name="sp_hnfs" purpose="testing" staging="../../unittests/">
      <test identifier="original" description="Tests of symmetry preserving HNF generation"
	    cases="sm_34_[1-6]" timed="true">
	<output folder="./tests/spHNFs"
		file="spHNFs.out.{}" template="integer.xml"
		identifier="spHNFs.out"/>
	<target name="spHNFs" compareto="spHNFs.out"
		varfile="spHNFs.out" when="each"/>
      </test>
      <assignment name="n" value="nfile">
	<value identifier="nfile" file="n.in.{}"
	       folder="./tests/spHNFs" rename="n.in"/>
      </assignment>
    </group>
  </decorates>  

  <decorates name="sp_hnfs.basecm_14">
    <group name="sp_hnfs" purpose="testing" staging="../../unittests/">
      <test identifier="original" description="Tests of symmetry preserving HNF generation"
	    cases="basecm_14_[1-5]" timed="true">
	<output folder="./tests/spHNFs"
		file="spHNFs.out.{}" template="integer.xml"
		identifier="spHNFs.out"/>
	<target name="spHNFs" compareto="spHNFs.out"
		varfile="spHNFs.out" when="each"/>
      </test>
      <assignment name="n" value="nfile">
	<value identifier="nfile" file="n.in.{}"
	       folder="./tests/spHNFs" rename="n.in"/>
      </assignment>
    </group>
  </decorates>  

  <decorates name="sp_hnfs.basecm_10_17">
    <group name="sp_hnfs" purpose="testing" staging="../../unittests/">
      <test identifier="original" description="Tests of symmetry preserving HNF generation"
	    cases="basecm_10_17_[1-5]" timed="true">
	<output folder="./tests/spHNFs"
		file="spHNFs.out.{}" template="integer.xml"
		identifier="spHNFs.out"/>
	<target name="spHNFs" compareto="spHNFs.out"
		varfile="spHNFs.out" when="each"/>
      </test>
      <assignment name="n" value="nfile">
	<value identifier="nfile" file="n.in.{}"
	       folder="./tests/spHNFs" rename="n.in"/>
      </assignment>
    </group>
  </decorates>  

  <decorates name="sp_hnfs.basecm_20_25">
    <group name="sp_hnfs" purpose="testing" staging="../../unittests/">
      <test identifier="original" description="Tests of symmetry preserving HNF generation"
	    cases="basecm_20_25_[1-5]" timed="true">
	<output folder="./tests/spHNFs"
		file="spHNFs.out.{}" template="integer.xml"
		identifier="spHNFs.out"/>
	<target name="spHNFs" compareto="spHNFs.out"
		varfile="spHNFs.out" when="each"/>
      </test>
      <assignment name="n" value="nfile">
	<value identifier="nfile" file="n.in.{}"
	       folder="./tests/spHNFs" rename="n.in"/>
      </assignment>
    </group>
  </decorates>  

  <decorates name="sp_hnfs.basecm_27">
    <group name="sp_hnfs" purpose="testing" staging="../../unittests/">
      <test identifier="original" description="Tests of symmetry preserving HNF generation"
	    cases="basecm_27_[1-5]" timed="true">
	<output folder="./tests/spHNFs"
		file="spHNFs.out.{}" template="integer.xml"
		identifier="spHNFs.out"/>
	<target name="spHNFs" compareto="spHNFs.out"
		varfile="spHNFs.out" when="each"/>
      </test>
      <assignment name="n" value="nfile">
	<value identifier="nfile" file="n.in.{}"
	       folder="./tests/spHNFs" rename="n.in"/>
      </assignment>
    </group>
  </decorates>  

  <decorates name="sp_hnfs.basecm_28">
    <group name="sp_hnfs" purpose="testing" staging="../../unittests/">
      <test identifier="original" description="Tests of symmetry preserving HNF generation"
	    cases="basecm_28_[1-5]" timed="true">
	<output folder="./tests/spHNFs"
		file="spHNFs.out.{}" template="integer.xml"
		identifier="spHNFs.out"/>
	<target name="spHNFs" compareto="spHNFs.out"
		varfile="spHNFs.out" when="each"/>
      </test>
      <assignment name="n" value="nfile">
	<value identifier="nfile" file="n.in.{}"
	       folder="./tests/spHNFs" rename="n.in"/>
      </assignment>
    </group>
  </decorates>  

  <decorates name="sp_hnfs.basecm_29_30">
    <group name="sp_hnfs" purpose="testing" staging="../../unittests/">
      <test identifier="original" description="Tests of symmetry preserving HNF generation"
	    cases="basecm_29_30_[1-5]" timed="true">
	<output folder="./tests/spHNFs"
		file="spHNFs.out.{}" template="integer.xml"
		identifier="spHNFs.out"/>
	<target name="spHNFs" compareto="spHNFs.out"
		varfile="spHNFs.out" when="each"/>
      </test>
      <assignment name="n" value="nfile">
	<value identifier="nfile" file="n.in.{}"
	       folder="./tests/spHNFs" rename="n.in"/>
      </assignment>
    </group>
  </decorates>  

  <decorates name="sp_hnfs.basecm_41">
    <group name="sp_hnfs" purpose="testing" staging="../../unittests/">
      <test identifier="original" description="Tests of symmetry preserving HNF generation"
	    cases="basecm_41_[1-5]" timed="true">
	<output folder="./tests/spHNFs"
		file="spHNFs.out.{}" template="integer.xml"
		identifier="spHNFs.out"/>
	<target name="spHNFs" compareto="spHNFs.out"
		varfile="spHNFs.out" when="each"/>
      </test>
      <assignment name="n" value="nfile">
	<value identifier="nfile" file="n.in.{}"
	       folder="./tests/spHNFs" rename="n.in"/>
      </assignment>
    </group>
  </decorates>  

  <decorates name="sp_hnfs.basecm_37_39">
    <group name="sp_hnfs" purpose="testing" staging="../../unittests/">
      <test identifier="original" description="Tests of symmetry preserving HNF generation"
	    cases="basecm_37_39_[1-5]" timed="true">
	<output folder="./tests/spHNFs"
		file="spHNFs.out.{}" template="integer.xml"
		identifier="spHNFs.out"/>
	<target name="spHNFs" compareto="spHNFs.out"
		varfile="spHNFs.out" when="each"/>
      </test>
      <assignment name="n" value="nfile">
	<value identifier="nfile" file="n.in.{}"
	       folder="./tests/spHNFs" rename="n.in"/>
      </assignment>
    </group>
  </decorates>  

  <decorates name="sp_hnfs.basecm_43">
    <group name="sp_hnfs" purpose="testing" staging="../../unittests/">
      <test identifier="original" description="Tests of symmetry preserving HNF generation"
	    cases="basecm_43_[1-5]" timed="true">
	<output folder="./tests/spHNFs"
		file="spHNFs.out.{}" template="integer.xml"
		identifier="spHNFs.out"/>
	<target name="spHNFs" compareto="spHNFs.out"
		varfile="spHNFs.out" when="each"/>
      </test>
      <assignment name="n" value="nfile">
	<value identifier="nfile" file="n.in.{}"
	       folder="./tests/spHNFs" rename="n.in"/>
      </assignment>
    </group>
  </decorates>  

  <decorates name="sp_hnfs.tric_31_44">
    <group name="sp_hnfs" purpose="testing" staging="../../unittests/">
      <test identifier="original" description="Tests of symmetry preserving HNF generation"
	    cases="tric[1-3]" timed="true">
	<output folder="./tests/spHNFs"
		file="spHNFs.out.{}" template="integer.xml"
		identifier="spHNFs.out"/>
	<target name="spHNFs" compareto="spHNFs.out"
		varfile="spHNFs.out" when="each"/>
      </test>
      <assignment name="n" value="nfile">
	<value identifier="nfile" file="n.in.{}"
	       folder="./tests/spHNFs" rename="n.in"/>
      </assignment>
    </group>
  </decorates>  
</fortpy>
