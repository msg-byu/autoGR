<?xml version="1.0" encoding="UTF-8"?>
<fortpy mode="docstring">
  <decorates name="find_kgrids.get_kpd_cubic">
    <group name="find_kgrids1" purpose="testing" staging="../../unittests/">
      <test identifier="kpd_cubic" description="Tests of the k-point density generation."
	    cases="[1-4]" timed="true">
	<output folder="./tests/find_kgrids"
		file="get_kpd_cubic.out.{}" template="integer.xml"
		identifier="get_kpd_cubic.out"/>
	<target name="densities" compareto="get_kpd_cubic.out"
		varfile="get_kpd_cubic.out" when="each"/>
      </test>
      <assignment name="lat_id" value="idfile">
	<value identifier="idfile" file="lat_id.in.{}"
	       folder="./tests/find_kgrids" rename="lat_id.in"/>
      </assignment>
      <assignment name="kpd" value="kpdfile">
	<value identifier="kpdfile" file="kpd.in.{}"
	       folder="./tests/find_kgrids" rename="kpd.in"/>
      </assignment>
    </group>
  </decorates>  

  <decorates name="find_kgrids.get_kpd_tric">
    <group name="find_kgrids2" purpose="testing" staging="../../unittests/">
      <test identifier="kpd_tric" description="Tests of the k-point density generation."
	    cases="[1-3]" timed="true">
	<output folder="./tests/find_kgrids"
		file="get_kpd_tric.out.{}" template="integer.xml"
		identifier="get_kpd_tric.out"/>
	<target name="r_kpd" compareto="get_kpd_tric.out"
		varfile="get_kpd_tric.out" when="each"/>
      </test>
      <test identifier="mult" description="Tests of the k-point density generation."
	    cases="[1-3]" timed="true">
	<output folder="./tests/find_kgrids"
		file="get_kpd_tric_mult.out.{}" template="integer.xml"
		identifier="get_kpd_tric_mult.out"/>
	<target name="mult" compareto="get_kpd_tric_mult.out"
		varfile="get_kpd_tric_mult.out" when="each"/>
      </test>
      <assignment name="kpd" value="kpdfile">
	<value identifier="kpdfile" file="tric_kpd.in.{}"
	       folder="./tests/find_kgrids" rename="kpd.in"/>
      </assignment>
    </group>
  </decorates>  

  <decorates name="find_kgrids.transform_supercell">
    <group name="find_kgrids3" purpose="testing" staging="../../unittests/">
      <test identifier="transformation" description="Tests of the transformation from
						     our basis to the users basis."
	    cases="[1-6]" timed="true">
	<output folder="./tests/find_kgrids"
		file="transform_supercell_Bu.out.{}" template="float.xml"
		identifier="transform_supercell_UB.out"/>
	<target name="UB" compareto="transform_supercell_UB.out"
		varfile="transform_supercell_UB.out" when="each"/>
      </test>
      <assignment name="No" value="Nofile">
	<value identifier="Nofile" file="transform_supercell_No.in.{}"
	       folder="./tests/find_kgrids" rename="No.in"/>
      </assignment>
      <assignment name="Nu" value="Nufile">
	<value identifier="Nufile" file="transform_supercell_Nu.in.{}"
	       folder="./tests/find_kgrids" rename="Nu.in"/>
      </assignment>
      <assignment name="Co" value="Cofile">
	<value identifier="Cofile" file="transform_supercell_Co.in.{}"
	       folder="./tests/find_kgrids" rename="Co.in"/>
      </assignment>
      <assignment name="Cu" value="Cufile">
	<value identifier="Cufile" file="transform_supercell_Cu.in.{}"
	       folder="./tests/find_kgrids" rename="Cu.in"/>
      </assignment>
      <assignment name="O" value="Ofile">
	<value identifier="Ofile" file="transform_supercell_O.in.{}"
	       folder="./tests/find_kgrids" rename="O.in"/>
      </assignment>
      <assignment name="spHNF" value="HNFfile">
	<value identifier="HNFfile" file="transform_supercell_HNF.in.{}"
	       folder="./tests/find_kgrids" rename="HNF.in"/>
      </assignment>
    </group>
  </decorates>  

  <decorates name="find_kgrids.find_grids">
    <group name="find_kgrids4" purpose="testing" staging="../../unittests/">
      <test identifier="grids" description="Tests of the grid generation."
	    cases="[1-37]" timed="true">
	<output folder="./tests/find_kgrids"
		file="grids.out.{}" template="fpyarray.xml"
		identifier="grids.out"/>
	<target name="grids" compareto="grids.out"
		varfile="grids.out" when="each"/>
      </test>
      <assignment name="lat_vecs" value="latfile">
	<value identifier="latfile" file="find_grids_lat_vecs.in.{}"
	       folder="./tests/find_kgrids" rename="lat_vecs.in"/>
      </assignment>
      <assignment name="kpd" value="kpdfile">
	<value identifier="kpdfile" file="find_grids_kpd.in.{}"
	       folder="./tests/find_kgrids" rename="kpd.in"/>
      </assignment>
      <assignment name="eps_" value="epsfile">
	<value identifier="epsfile" constant="1E-5"/>
      </assignment>
    </group>
  </decorates>  

  <decorates name="find_kgrids.grid_selection">
    <group name="find_kgrids5" purpose="testing" staging="../../unittests/">
      <test identifier="selection" description="Tests of the grid selection."
	    cases="[1-3]" timed="true">
	<output folder="./tests/find_kgrids"
		file="grid_selection_best_grid.out.{}" template="fpyarray.xml"
		identifier="best_grid.out"/>
	<target name="best_grid" compareto="best_grid.out"
		varfile="best_grid.out" when="each"/>
      </test>
      <assignment name="lat_vecs" value="latfile">
	<value identifier="latfile" file="grid_selection_lat_vecs.in.{}"
	       folder="./tests/find_kgrids" rename="lat_vecs.in"/>
      </assignment>
      <assignment name="shift" value="shiftfile">
	<value identifier="shiftfile" file="grid_selection_shift.in.{}"
	       folder="./tests/find_kgrids" rename="shift.in"/>
      </assignment>
      <assignment name="grids" value="gridsfile">
	<value identifier="gridsfile" file="grid_selection_grids.in.{}"
	       folder="./tests/find_kgrids" rename="grids.in"/>
      </assignment>
      <assignment name="eps_" value="epsfile">
	<value identifier="epsfile" constant="1E-3"/>
      </assignment>
    </group>
  </decorates>  
</fortpy>
